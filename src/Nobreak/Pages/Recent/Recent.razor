@page "/Recent"

@inject INobreakProvider _nobreak
@inject IMapper _mapper

<Table Source="_states" Virtualize="true">
    <Head>
        <th><span class="oi oi-clock"></span> <Name T="NobreakStateViewModel" For="s=>s.TimeAgo" /></th>
        <th><span class="oi oi-power-standby"></span> <Name T="NobreakStateViewModel" For="s=>s.PowerState" /></th>
        <th><span class="oi oi-bolt"></span> <Name T="NobreakStateViewModel" For="s=>s.VoltageIn" />/<Name T="NobreakStateViewModel" For="s=>s.VoltageOut" /></th>
        <th><span class="oi oi-lightbulb"></span> <Name T="NobreakStateViewModel" For="s=>s.LoadPercentage" /></th>
        <th><span class="oi oi-battery-full"></span> <Name T="NobreakStateViewModel" For="s=>s.BatteryVoltage" /></th>
    </Head>
    <Body Context="state">
        <td>@(new TimeSpan(Math.Max(TimeSpan.Zero.Ticks, state.TimeAgo.Ticks)).Format())</td>
        <td>
            <span class="badge badge-@(state.PowerState == Context.Entities.PowerStates.Grid ? "success":"danger")">
                @(state.PowerState.GetDisplayName())
            </span>
        </td>
        <td>@(state.VoltageIn)v <span class="oi oi-arrow-thick-right"></span> @(state.VoltageOut)v @@ @(state.FrequencyHz)hz</td>
        <td>@(state.LoadPercentage)% @(state.TemperatureC)ºC</td>
        <td>@(state.BatteryVoltage)v (@(state.BatteryPercentage)%)</td>
    </Body>
</Table>

<Timer Elapsed="Reload" Enabled="true" Interval="TimeSpan.FromSeconds(1)" />

@code {
    private List<NobreakStateViewModel> _states = new();

    private async Task Reload()
    {
        var recentValues = await _nobreak.GetRecentValuesAsync();
        _states = _mapper.Map<List<NobreakStateViewModel>>(recentValues);
        await InvokeAsync(StateHasChanged);
    }

    protected override Task OnInitializedAsync() =>
        Reload();
}
